@model MyShop.Web.Models.ViewModels.ProductsAndCustomersVM

@{
    ViewData["Title"] = "Create a new order";
}

<h1>Create a new order</h1>
<div class="row">
    <div class="col-4">
        <strong>Add items to order</strong>
        <div class="form-row mb-lg-4 ">
            <div class="row">
                <div class="col">
                    <label>Select product</label>
                    <select v-model="selectedProduct" class="form-control" id="product">
                        <option disabled value="">Please select one</option>
                        @foreach (var product in Model.Products)
                        {
                            <option value="@product.ProductID"
                                v-bind:value="{ productId: '@product.ProductID', name: '@product.Name', price: @product.Price.ToString(System.Globalization.CultureInfo.InvariantCulture) }">
                                @product.Name
                            </option>
                        }
                    </select>
                </div>
                <div class="col">
                    <label>Quantity</label>
                    <input v-model="selectedQuantity" class="form-control" id="quantity" type="number" value="1" />
                </div>
            </div>
        </div>

        <div>
            <button v-on:click="add" :disabled='canAddToOrder' class="btn btn-outline-success">Add to order</button>
            <button v-on:click="clear" :disabled='clearOrderLine' class="btn btn-success">Clear order</button>
        </div>
        <div class="mt-4">
            <strong>Copy data from existing customer</strong>
            <p>Select customer</p>
            <div class="row">
                <div class="col">
                    <select size="8" v-model="selectedCustomer" v-on:change="customerSelected" class="form-control" id="customer">
                        @foreach (var customer in Model.Customers)
                        {
                            <option :value="{ customerId: '@customer.CustomerID', name: '@customer.Name', shippingAddress: '@customer.ShippingAddress', city: '@customer.City', postalCode: '@customer.PostalCode', country: '@customer.Country' }">
                                @customer.Name
                            </option>
                        }
                    </select>
                </div>
            </div>
        </div>

    </div>

    <div class="col-4">
        <strong>Current order</strong>
        <div class="mb-lg-5">
            <div class="mb-lg-5">
                Items
                <ul class="list-group">
                    <li v-for="line in lineitems" :key="product.productId" class="list-group-item d-flex justify-content-between lh-condensed">
                        <div>
                            <h6 class="my-0">{{ line.product.name }}</h6>
                            <small class="text-muted">Quantity: {{ line.quantity }}</small>
                        </div>
                        <span class="text-muted">${{ line.product.price *  line.quantity }}</span>
                    </li>

                    <li class="list-group-item d-flex justify-content-between">
                        <span>Total (USD)</span>
                        <strong>${{ totalPrice }}</strong>
                    </li>
                </ul>
            </div>
            <div>
                Customer details
                <div class="form-group mb-lg-5">
                    <div class="form-group mb-2">
                        <input v-model="fullname" placeholder="Customer name" class="form-control">
                    </div>
                    <div class="form-group mb-2">
                        <input v-model="shippingAddress" placeholder="Customer address" class="form-control">
                    </div>
                    <div class="form-group mb-2">
                        <input v-model="city" placeholder="Geel" class="form-control">
                    </div>
                    <div class="form-group mb-2">
                        <input v-model="postalCode" placeholder="####" class="form-control">
                    </div>
                    <div class="form-group">
                        <input v-model="country" placeholder="Belgium" class="form-control">
                    </div>
                </div>
            </div>
            <button v-on:click="submit" :disabled='canSubmitOrder' class="btn btn-success">CREATE ORDER</button>
        </div>
    </div>
</div>

<div id="orderSuccess" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Order Creation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>

@section Scripts
    {
    <script type="text/javascript">


        var app = new Vue({
            el: '#app',
            data: {
                fullname: null,
                shippingAddress: null,
                city: null,
                postalCode: null,
                country: null,

                selectedProduct: '',
                selectedQuantity: 1,
                totalPrice: 0,
                lineitems: new Array(),

                selectedCustomer: ''
            },
            computed: {
                canSubmitOrder: function () {
                    return this.lineitems.length == 0 || this.fullname == null
                },
                canAddToOrder: function () {
                    return this.selectedProduct == ''
                },
                clearOrderLine: function () {
                    return this.lineitems.length == 0
                }
            },
            methods: {
                add: function () {
                    var lineitem = {
                        product: this.selectedProduct,
                        quantity: this.selectedQuantity
                    }

                    if (product == null) return

                    this.lineitems.push(lineitem)

                    this.totalPrice += lineitem.product.price * lineitem.quantity
                },

                clear: function () {
                    this.lineitems.splice(0, this.lineitems.length)

                    this.totalPrice = 0
                },

                customerSelected: function () {
                    this.fullname = this.selectedCustomer.name,
                        this.shippingAddress = this.selectedCustomer.shippingAddress,
                        this.city = this.selectedCustomer.city,
                        this.postalCode = this.selectedCustomer.postalCode,
                        this.country = this.selectedCustomer.country,

                        console.log('Selected customer:', this.selectedCustomer);
                },
                submit: function () {
                    var data = {
                        customer: {
                            name: this.fullname,
                            shippingAddress: this.shippingAddress,
                            city: this.city,
                            postalCode: this.postalCode,
                            country: this.country
                        },
                        lineitems: this.lineitems.map(function (line) {
                            return {
                                productId: line.product.productId,
                                quantity: line.quantity
                            }
                        })
                    }

                    $.ajax({
                        url: "/Order/Create",
                        data: data,
                        type: 'post',
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            $(".modal-body").html("<strong>ERROR</strong><p>" + XMLHttpRequest.responseText + "</p>")
                            $('#orderSuccess').modal('show')
                        },
                        success: function (data) {
                            $(".modal-body").html("<strong>Success!</strong><p>The order was successfully created</p>")
                            $('#orderSuccess').modal('show')
                        }
                    });
                }
            }
        })
    </script>
}